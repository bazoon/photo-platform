// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ReactI18next from "react-i18next";
import * as Button from "primereact/button";
import * as Dialog from "primereact/dialog";
import * as Listbox from "primereact/listbox";
import * as ApiJs from "../../../core/api.js";
import * as Radiobutton from "primereact/radiobutton";

function valueToModerResult(value) {
  if (value > 2 || value < 0) {
    return /* Unseen */0;
  } else {
    return value;
  }
}

function asyncGetSections(prim) {
  return ApiJs.asyncGet(prim);
}

function asyncGetImages(prim) {
  return ApiJs.asyncGet(prim);
}

function asyncGetTotalPhotoworks(prim) {
  return ApiJs.asyncGet(prim);
}

function asyncPutModer(prim0, prim1) {
  return ApiJs.asyncPut(prim0, prim1);
}

var Button$1 = {};

var RadioButton = {};

var Dialog$1 = {};

var ListBox = {};

function countByStatus(section) {
  return Belt_Array.reduce(section.images, [
              0,
              0,
              0
            ], (function (param, e) {
                var a = param[2];
                var d = param[1];
                var u = param[0];
                var match = e.moderResult;
                switch (match) {
                  case /* Unseen */0 :
                      return [
                              u + 1 | 0,
                              d,
                              a
                            ];
                  case /* Approved */1 :
                      return [
                              u,
                              d,
                              a + 1 | 0
                            ];
                  case /* Declined */2 :
                      return [
                              u,
                              d + 1 | 0,
                              a
                            ];
                  
                }
              }));
}

function Moder(Props) {
  var id = Props.id;
  var match = ReactI18next.useTranslation("namespace1");
  var t;
  if (match.length !== 3) {
    t = (function (a) {
        return a;
      });
  } else {
    var t$1 = match[0];
    t = (function (a) {
        return Curry._2(t$1, a, a);
      });
  }
  var cleanUp = function (param) {
    
  };
  var match$1 = React.useState(function () {
        return [];
      });
  var setSections = match$1[1];
  var sections = match$1[0];
  var match$2 = React.useState(function () {
        
      });
  var setSection = match$2[1];
  var section = match$2[0];
  var match$3 = React.useState(function () {
        
      });
  var setSelectedImage = match$3[1];
  var selectedImage = match$3[0];
  var match$4 = React.useState(function () {
        
      });
  var setContestInfo = match$4[1];
  var match$5 = React.useState(function () {
        return /* Unseen */0;
      });
  var setModerFilter = match$5[1];
  var moderFilter = match$5[0];
  var match$6 = React.useState(function () {
        return false;
      });
  var setIsPreview = match$6[1];
  var isPreview = match$6[0];
  var match$7 = React.useState(function () {
        return "";
      });
  var setReason = match$7[1];
  var reason = match$7[0];
  var failed = function (param) {
    
  };
  var loadSection = function (s) {
    var id = s !== undefined ? s.id : "";
    return Curry._3(ApiJs.asyncGet("api/sections/" + id + "/images").fork, failed, (function (param) {
                  var id = s !== undefined ? s.id : "";
                  var images = Belt_Array.map(param, (function (im) {
                          return {
                                  id: im.id,
                                  description: im.description,
                                  filename: im.filename,
                                  name: im.name,
                                  place: im.place,
                                  year: im.year,
                                  author: im.author,
                                  dateAdd: im.dateAdd,
                                  moder: im.moder,
                                  moderResult: valueToModerResult(im.moder),
                                  reason: im.reason
                                };
                        }));
                  Curry._1(setSections, (function (sections) {
                          var newSections = Belt_Array.map(sections, (function (x) {
                                  if (x.id === id) {
                                    return {
                                            id: x.id,
                                            maxCountImg: x.maxCountImg,
                                            name: x.name,
                                            images: images
                                          };
                                  } else {
                                    return x;
                                  }
                                }));
                          console.log("setting", s);
                          Curry._1(setSection, (function (param) {
                                  return Belt_Array.getBy(newSections, (function (e) {
                                                return e.id === id;
                                              }));
                                }));
                          Curry._1(setSelectedImage, (function (param) {
                                  return Belt_Array.get(images, 0);
                                }));
                          return newSections;
                        }));
                  
                }), cleanUp);
  };
  var selectSection = function (e) {
    loadSection(Caml_option.nullable_to_opt(e.value));
    
  };
  var ok = function (data) {
    Curry._1(setSections, (function (param) {
            return data;
          }));
    var s = Belt_Array.get(data, 0);
    loadSection(s);
    
  };
  var okContestInfo = function (a) {
    Curry._1(setContestInfo, (function (param) {
            return a;
          }));
    
  };
  React.useEffect((function () {
          Curry._3(ApiJs.asyncGet("api/sections").fork, failed, ok, cleanUp);
          Curry._3(ApiJs.asyncGet("api/admin/moder/stats/" + id).fork, failed, okContestInfo, cleanUp);
          
        }), []);
  var hidePreview = function (param) {
    return Curry._1(setIsPreview, (function (param) {
                  return false;
                }));
  };
  var renderPreview = function (im) {
    return React.createElement(Dialog.Dialog, {
                children: im !== undefined ? React.createElement("div", undefined, React.createElement("img", {
                            className: "preview",
                            src: im.filename
                          })) : React.createElement("div", undefined),
                onHide: hidePreview,
                visible: isPreview,
                header: false,
                maximized: true,
                contentClassName: "flex justify-center",
                maximizable: true
              });
  };
  var renderImage = function (im) {
    var basicCls = "object-cover h-full w-full opacity-40";
    var selectedCls = "object-cover h-full w-full opacity-40opacity-100";
    var match = selectedImage !== undefined && Caml_obj.caml_equal(im, selectedImage) ? [
        selectedCls,
        true
      ] : [
        basicCls,
        false
      ];
    return React.createElement("div", undefined, React.createElement("div", {
                    className: "w-52 h-52 cursor-pointer flex-shrink-0 flex-grow-0 pt-5 opacity-80"
                  }, React.createElement("img", {
                        key: im.id,
                        className: match[0],
                        src: im.filename,
                        onClick: (function (param) {
                            var isSelected = selectedImage !== undefined ? Caml_obj.caml_equal(selectedImage, im) : false;
                            Curry._1(setReason, (function (param) {
                                    return im.reason;
                                  }));
                            if (isSelected) {
                              return Curry._1(setIsPreview, (function (param) {
                                            return true;
                                          }));
                            } else {
                              return Curry._1(setSelectedImage, (function (param) {
                                            return im;
                                          }));
                            }
                          })
                      })));
  };
  var renderImages = function (section, visibleModerResult) {
    var visible = Belt_Array.map(section.images.filter(function (im) {
              return im.moderResult === visibleModerResult;
            }), renderImage);
    return React.createElement("div", {
                className: "flex gap-5 overflow-x-auto ml-5 mr-5 h-72 p-5 overflow-y-hidden hidden-scroll relative"
              }, visible);
  };
  var renderInfo = function (im) {
    var tdCls = "p-5";
    return React.createElement("div", undefined, React.createElement("table", {
                    className: "w-full"
                  }, React.createElement("colgroup", undefined, React.createElement("col", {
                            className: "w-64"
                          }), React.createElement("col", undefined)), React.createElement("tr", undefined, React.createElement("td", {
                            className: tdCls
                          }, Curry._1(t, "name")), React.createElement("td", {
                            className: tdCls
                          }, im.name)), React.createElement("tr", undefined, React.createElement("td", {
                            className: tdCls
                          }, Curry._1(t, "dateAdd")), React.createElement("td", {
                            className: tdCls
                          }, im.dateAdd)), React.createElement("tr", undefined, React.createElement("td", {
                            className: tdCls
                          }, Curry._1(t, "year")), React.createElement("td", {
                            className: tdCls
                          }, im.year)), React.createElement("tr", undefined, React.createElement("td", {
                            className: tdCls
                          }, Curry._1(t, "author")), React.createElement("td", {
                            className: tdCls
                          }, im.author)), React.createElement("tr", undefined, React.createElement("td", {
                            className: tdCls,
                            colSpan: 2
                          }, im.description))));
  };
  var renderSections = function (value) {
    return React.createElement(Listbox.ListBox, {
                options: sections,
                optionLabel: "name",
                className: "h-full",
                optionsValue: "id",
                listClassName: "h-full",
                value: value,
                onChange: selectSection
              });
  };
  var renderStats = function (section, contestInfo) {
    var match = section !== undefined ? countByStatus(section) : [
        0,
        0,
        0
      ];
    return React.createElement("div", {
                className: "flex justify-between p-5"
              }, React.createElement("div", undefined, contestInfo !== undefined ? React.createElement("div", undefined, React.createElement("span", {
                              className: "mr-2"
                            }, Curry._1(t, "totalPhotoworks")), contestInfo.totalPhotoworks) : ""), React.createElement("div", undefined, React.createElement("span", {
                        className: "mr-2"
                      }, Curry._1(t, "unseen")), String(match[0])), React.createElement("div", undefined, React.createElement("span", {
                        className: "mr-2"
                      }, Curry._1(t, "approved")), String(match[2])), React.createElement("div", undefined, React.createElement("span", {
                        className: "mr-2"
                      }, Curry._1(t, "declined")), String(match[1])));
  };
  var renderFilter = function (param) {
    return React.createElement("div", {
                className: "flex justify-between w-1/2"
              }, React.createElement("div", undefined, React.createElement("label", {
                        className: "mr-5"
                      }, Curry._1(t, "unseen")), React.createElement(Radiobutton.RadioButton, {
                        onChange: (function (param) {
                            Curry._1(setModerFilter, (function (param) {
                                    return /* Unseen */0;
                                  }));
                            
                          }),
                        checked: moderFilter === /* Unseen */0,
                        name: "radio"
                      })), React.createElement("div", undefined, React.createElement("label", {
                        className: "mr-5"
                      }, Curry._1(t, "approved")), React.createElement(Radiobutton.RadioButton, {
                        onChange: (function (param) {
                            Curry._1(setModerFilter, (function (param) {
                                    return /* Approved */1;
                                  }));
                            
                          }),
                        checked: moderFilter === /* Approved */1,
                        name: "radio"
                      })), React.createElement("div", undefined, React.createElement("label", {
                        className: "mr-5"
                      }, Curry._1(t, "declined")), React.createElement(Radiobutton.RadioButton, {
                        onChange: (function (param) {
                            Curry._1(setModerFilter, (function (param) {
                                    return /* Declined */2;
                                  }));
                            
                          }),
                        checked: moderFilter === /* Declined */2,
                        name: "radio"
                      })));
  };
  var approveOk = function (param) {
    
  };
  var declineOk = function (param) {
    
  };
  var decide = function (im, section, decision) {
    if (im !== undefined && section !== undefined) {
      return Curry._1(setSections, (function (sections) {
                    var newImages = Belt_Array.map(section.images, (function (x) {
                            if (x.id === im.id) {
                              return {
                                      id: x.id,
                                      description: x.description,
                                      filename: x.filename,
                                      name: x.name,
                                      place: x.place,
                                      year: x.year,
                                      author: x.author,
                                      dateAdd: x.dateAdd,
                                      moder: x.moder,
                                      moderResult: decision,
                                      reason: x.reason
                                    };
                            } else {
                              return x;
                            }
                          }));
                    var newSection_id = section.id;
                    var newSection_maxCountImg = section.maxCountImg;
                    var newSection_name = section.name;
                    var newSection = {
                      id: newSection_id,
                      maxCountImg: newSection_maxCountImg,
                      name: newSection_name,
                      images: newImages
                    };
                    var newSections = Belt_Array.map(sections, (function (x) {
                            if (x.id === section.id) {
                              return newSection;
                            } else {
                              return x;
                            }
                          }));
                    Curry._1(setSection, (function (param) {
                            return newSection;
                          }));
                    if (decision === /* Approved */1) {
                      Curry._3(ApiJs.asyncPut("api/admin/moder/approve/" + im.id, {
                                reason: reason
                              }).fork, failed, approveOk, cleanUp);
                    } else {
                      Curry._3(ApiJs.asyncPut("api/admin/moder/decline/" + im.id, {
                                reason: reason
                              }).fork, failed, declineOk, cleanUp);
                    }
                    return newSections;
                  }));
    }
    
  };
  var renderModerToolbar = function (im, section) {
    return React.createElement("div", {
                className: "flex justify-between"
              }, React.createElement(Button.Button, {
                    children: Curry._1(t, "decline"),
                    onClick: (function (param) {
                        return decide(im, section, /* Declined */2);
                      }),
                    className: ""
                  }), React.createElement("input", {
                    className: "flex-1 ml-10 mr-10",
                    value: reason,
                    onChange: (function (e) {
                        return Curry._1(setReason, e.currentTarget.value);
                      })
                  }), React.createElement(Button.Button, {
                    children: Curry._1(t, "approve"),
                    onClick: (function (param) {
                        return decide(im, section, /* Approved */1);
                      }),
                    className: ""
                  }));
  };
  return React.createElement("div", undefined, renderStats(section, match$4[0]), React.createElement("div", {
                  className: "grid grid-cols-12 h-full p-5 gap-5"
                }, React.createElement("div", {
                      className: "col-span-4 row-span-4 h-full"
                    }, renderSections(section)), React.createElement("div", {
                      className: "col-span-8"
                    }, renderFilter(undefined)), React.createElement("div", {
                      className: "col-span-8 row-span-1 h-full"
                    }, section !== undefined ? renderImages(section, moderFilter) : React.createElement("div", undefined)), React.createElement("div", {
                      className: "col-span-8 h-72 row-span-1"
                    }, selectedImage !== undefined ? renderInfo(selectedImage) : React.createElement("div", undefined)), React.createElement("div", {
                      className: "col-span-8 row-span-1"
                    }, renderModerToolbar(selectedImage, section))), renderPreview(selectedImage));
}

var make = Moder;

export {
  valueToModerResult ,
  asyncGetSections ,
  asyncGetImages ,
  asyncGetTotalPhotoworks ,
  asyncPutModer ,
  Button$1 as Button,
  RadioButton ,
  Dialog$1 as Dialog,
  ListBox ,
  countByStatus ,
  make ,
  
}
/* react Not a pure module */
