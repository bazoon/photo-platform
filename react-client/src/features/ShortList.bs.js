// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_int32 from "rescript/lib/es6/caml_int32.js";
import * as ReactI18next from "react-i18next";
import * as ApiJs from "../core/api.js";
import * as ReactRecollect from "react-recollect";
import * as ProfileMenuJs from "./ProfileMenu.js";

function asyncGet(prim) {
  return ApiJs.asyncGet(prim);
}

function asyncGetCan(prim) {
  return ApiJs.asyncGet(prim);
}

function asyncGetSections(prim) {
  return ApiJs.asyncGet(prim);
}

function asyncGetImages(prim) {
  return ApiJs.asyncGet(prim);
}

var make = ProfileMenuJs.ProfileMenu;

var ProfileMenu = {
  make: make
};

var Link = {};

function ShortList(Props) {
  var match = ReactI18next.useTranslation("namespace1");
  var t;
  if (match.length !== 3) {
    t = (function (a) {
        return a;
      });
  } else {
    var t$1 = match[0];
    t = (function (a) {
        return Curry._2(t$1, a, a);
      });
  }
  var match$1 = React.useState(function () {
        return [];
      });
  var setSections = match$1[1];
  var match$2 = React.useState(function () {
        return [];
      });
  var setImages = match$2[1];
  var match$3 = React.useState(function () {
        
      });
  var setSection = match$3[1];
  var match$4 = React.useState(function () {
        return 0;
      });
  var setImageIndex = match$4[1];
  var cleanUp = function (param) {
    
  };
  var failed = function (param) {
    
  };
  var okImages = function (images) {
    Curry._1(setImages, (function (param) {
            return images;
          }));
    
  };
  var loadSection = function (s) {
    var id = s !== undefined ? s.id : "";
    Curry._1(setSection, (function (param) {
            return s;
          }));
    return Curry._3(ApiJs.asyncGet("api/jury/shortList/" + id).fork, failed, okImages, cleanUp);
  };
  var sectionsOk = function (data) {
    Curry._1(setSections, (function (param) {
            return data;
          }));
    var s = Belt_Array.get(data, 0);
    loadSection(s);
    
  };
  var loadSections = function (param) {
    Curry._3(ApiJs.asyncGet("api/jury/sections").fork, failed, sectionsOk, cleanUp);
    
  };
  var move = function (dir) {
    return Curry._1(setSections, (function (s) {
                  Curry._1(setImageIndex, (function (old) {
                          var newIndex = Caml_int32.mod_(old + dir | 0, s.length);
                          var newSection = Belt_Array.get(s, newIndex);
                          Curry._1(setSection, (function (param) {
                                  return newSection;
                                }));
                          loadSection(newSection);
                          return newIndex;
                        }));
                  return s;
                }));
  };
  React.useEffect((function () {
          loadSections(undefined);
          
        }), []);
  var renderThumb = function (image) {
    return React.createElement("div", {
                className: "grid grid-cols-2 gap-10"
              }, React.createElement("div", {
                    className: "w-auto h-52 justify-end flex"
                  }, React.createElement("img", {
                        className: "object-contain h-full",
                        src: image.filename
                      })), React.createElement("div", {
                    className: "h-52 cursor-pointer flex-shrink-0 flex-grow-0 flex-col flex"
                  }, React.createElement("span", {
                        className: "text-sm-2"
                      }, image.name), React.createElement("span", {
                        className: "text-sm-2"
                      }, image.author), React.createElement("span", {
                        className: "text-sm-2"
                      }, image.email), React.createElement("span", {
                        className: "text-sm-2"
                      }, Curry._1(t, "mean") + " - " + String(image.mean)), React.createElement("span", {
                        className: "text-sm-2"
                      }, Curry._1(t, "median") + " - " + String(image.median)), React.createElement("span", {
                        className: "text-sm-2"
                      }, Curry._1(t, "count") + " - " + String(image.count))));
  };
  var renderThumbs = function (images) {
    return React.createElement("div", {
                className: "grid grid-cols-1 gap-5 m-auto text-base items-baseline"
              }, Belt_Array.map(images, renderThumb));
  };
  var renderSection = function (s) {
    if (s !== undefined) {
      return React.createElement("div", {
                  className: "flex items-center justify-between w-4/5"
                }, React.createElement("div", {
                      className: "mr-20 cursor-pointer text-3xl",
                      onClick: (function (param) {
                          return move(-1);
                        })
                    }, "<"), React.createElement("div", {
                      className: "text-2xl w-3/5 text-center"
                    }, s.name), React.createElement("div", {
                      className: "ml-20 cursor-pointer text-3xl",
                      onClick: (function (param) {
                          return move(1);
                        })
                    }, ">"));
    } else {
      return React.createElement(React.Fragment, undefined);
    }
  };
  var i = ReactRecollect.store.info;
  var i$1 = ReactRecollect.store.info;
  return React.createElement("div", {
              className: "relative flex flex-col items-center flex-1 w-full"
            }, React.createElement("div", {
                  className: "uppercase text-semi-bright mb-5 text-4xl text-center mt-10"
                }, i !== undefined ? i.salone : React.createElement(React.Fragment, undefined)), React.createElement("div", {
                  className: "uppercase text-semi-bright mb-10 text-3xl text-center"
                }, i$1 !== undefined ? i$1.name : React.createElement(React.Fragment, undefined)), React.createElement("div", {
                  className: "mb-20 w-full flex justify-center"
                }, renderSection(match$3[0])), React.createElement("div", {
                  className: "mb-40"
                }, renderThumbs(match$2[0])));
}

var make$1 = ShortList;

export {
  asyncGet ,
  asyncGetCan ,
  asyncGetSections ,
  asyncGetImages ,
  ProfileMenu ,
  Link ,
  make$1 as make,
  
}
/* make Not a pure module */
